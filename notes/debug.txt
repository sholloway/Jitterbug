Tools to use for profiling on the command line
	time
		outputs:
			real -> clock time
			user -> user time
			sys -> kernel time
	
	dtruss
		sits on top of dTrace.
		To use:
			sudo dtruss /Users/sholloway/Dropbox/Jitterbug/Foxtrot.app/Contents/MacOS/Foxtrot render
	
	dTrace
	
	lldb
		lldb is at /Developer/usr/bin add an alias to your .bash_profile or put it on the path
		http://lldb.llvm.org/tutorial.html
	
	Instruments
	
	macrubyd
		The macruby debugger for debugging ruby scripts. Can this be used with an application?
		
	Look into integrating ARB_debug_output extension, as an alternative to glError.
		
Thoughts:
	Can I use lldb to better effect if I compile the ruby scripts to ObjC?
	
#check for glError code in header	
grep 0x0502 /System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/gl3.h

#see if there is bridge support for an OpengGL function
grep glBindFragDataLocation /System/Library/Frameworks/OpenGL.framework/Resources/BridgeSupport/OpenGL.bridgesupport

getShaderParameter
grep GLsizeiptr /System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/gl3.h

workflow
jb clean | (pushd /Users/sholloway/Documents/Code/Jitterbug && rake clobber && rake && popd && jb render)